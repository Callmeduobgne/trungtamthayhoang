'use client'

import { useState, useEffect } from 'react'
import { useRouter } from 'next/navigation'

export default function AdminDashboard() {
  const [loading, setLoading] = useState(true)
  const router = useRouter()

  useEffect(() => {
    const token = localStorage.getItem('access_token')
    if (!token) {
      router.push('/login')
      return
    }

    try {
      const payload = JSON.parse(atob(token.split('.')[1]))
      if (payload.role !== 'admin') {
        router.push('/dashboard')
        return
      }
    } catch (error) {
      router.push('/login')
      return
    }

    setLoading(false)
  }, [router])

  const handleLogout = () => {
    localStorage.removeItem('access_token')
    localStorage.removeItem('refresh_token')
    router.push('/login')
  }

  if (loading) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600"></div>
      </div>
    )
  }

    const menuItems = [
    'T·ªïng quan',
    'Qu·∫£n l√Ω h·ªçc sinh', 
    'Qu·∫£n l√Ω gi√°o vi√™n',
    'Qu·∫£n l√Ω l·ªõp h·ªçc',
    'Th·ªùi kh√≥a bi·ªÉu',
    'Qu·∫£n l√Ω b√†i thi',
    'Qu·∫£n l√Ω ƒëi·ªÉm s·ªë',
    'Qu·∫£n l√Ω h·ªçc ph√≠',
    'B√°o c√°o',
    'C√†i ƒë·∫∑t'
  ]

  const stats = [
    { label: 'H·ªçc sinh', value: '245' },
    { label: 'Gi√°o vi√™n', value: '15' },
    { label: 'L·ªõp h·ªçc', value: '12' },
    { label: 'Doanh thu', value: '125M' }
  ]

  return (
    <div className="min-h-screen bg-gray-900 flex">
      <div className="w-64 bg-gray-900 shadow-lg border-r-4 border-yellow-400">
        <div className="flex flex-col h-full">
          <div className="h-16 flex items-center px-4 border-b border-gray-800">
            <div className="w-8 h-8 bg-yellow-400 rounded-full flex items-center justify-center mr-3">
              <span className="text-black text-lg font-bold">üè´</span>
            </div>
            <h1 className="text-lg font-bold text-white">Trung T√¢m Th·∫ßy Ho√†ng</h1>
          </div>
          
          <nav className="flex-1 p-4 space-y-2">
            <a href="/admin/dashboard" className="group flex items-center px-3 py-3 rounded-lg text-sm transition-all duration-200 bg-yellow-400 bg-opacity-20 text-yellow-300 border-l-4 border-yellow-400 font-medium">
              <span className="w-2 h-2 rounded-full mr-3 bg-yellow-400"></span>
              T·ªïng quan
            </a>
            <a href="/admin/students" className="group flex items-center px-3 py-3 rounded-lg text-sm transition-all duration-200 text-gray-300 hover:bg-gray-800 hover:text-white hover:border-l-4 hover:border-yellow-400">
              <span className="w-2 h-2 rounded-full mr-3 bg-gray-600 group-hover:bg-yellow-400"></span>
              Qu·∫£n l√Ω h·ªçc sinh
            </a>
            <a href="/admin/teachers" className="group flex items-center px-3 py-3 rounded-lg text-sm transition-all duration-200 text-gray-300 hover:bg-gray-800 hover:text-white hover:border-l-4 hover:border-yellow-400">
              <span className="w-2 h-2 rounded-full mr-3 bg-gray-600 group-hover:bg-yellow-400"></span>
              Qu·∫£n l√Ω gi√°o vi√™n
            </a>
            {menuItems.slice(3).map((item, index) => (
              <a key={item} href="#" className="group flex items-center px-3 py-3 rounded-lg text-sm transition-all duration-200 text-gray-300 hover:bg-gray-800 hover:text-white hover:border-l-4 hover:border-yellow-400">
                <span className="w-2 h-2 rounded-full mr-3 bg-gray-600 group-hover:bg-yellow-400"></span>
                {item}
              </a>
            ))}
          </nav>
          
          <div className="border-t border-gray-800 p-4">
            <div className="flex items-center">
              <div className="w-10 h-10 bg-gradient-to-br from-yellow-400 to-yellow-500 rounded-full flex items-center justify-center border-2 border-yellow-300">
                <span className="text-black text-sm font-bold">A</span>
              </div>
              <div className="ml-3">
                <p className="text-sm font-medium text-white">Qu·∫£n tr·ªã vi√™n</p>
                <p className="text-xs text-gray-400">Qu·∫£n tr·ªã h·ªá th·ªëng</p>
              </div>
              <button onClick={handleLogout} className="ml-auto text-gray-400 hover:text-red-400 transition-colors">
                <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1" />
                </svg>
              </button>
            </div>
          </div>
        </div>
      </div>

      <div className="flex-1 bg-gray-900">
        <header className="bg-gray-800 shadow-lg border-b border-gray-700 px-6 py-4">
          <div className="flex items-center justify-between">
            <div>
              <h1 className="text-2xl font-bold text-white">B·∫£ng ƒëi·ªÅu khi·ªÉn</h1>
              <p className="text-sm text-gray-400 mt-1">Qu·∫£n l√Ω h·ªá th·ªëng trung t√¢m</p>
            </div>
            <div className="flex items-center space-x-4">
              <div className="flex items-center space-x-2">
                <div className="w-3 h-3 bg-green-400 rounded-full animate-pulse"></div>
                <span className="text-sm text-green-400 font-medium">Tr·∫°ng th√°i h·ªá th·ªëng: Ho·∫°t ƒë·ªông</span>
              </div>
              <div className="text-sm text-gray-400">
                C·∫≠p nh·∫≠t l·∫ßn cu·ªëi: <span className="text-yellow-400 font-mono">2 ph√∫t tr∆∞·ªõc</span>
              </div>
            </div>
          </div>
        </header>

        <main className="p-6 bg-gray-900">
          <div className="grid grid-cols-4 gap-6 mb-8">
            {stats.map((stat, index) => (
              <div key={index} className="bg-gray-800 p-6 rounded-xl border border-gray-700 hover:border-yellow-400 transition-all duration-300 hover:shadow-lg hover:shadow-yellow-400/20">
                <div className="flex items-center justify-between mb-3">
                  <div className={`w-12 h-12 rounded-full flex items-center justify-center ${
                    index === 0 ? 'bg-blue-500 bg-opacity-20 border border-blue-400' :
                    index === 1 ? 'bg-green-500 bg-opacity-20 border border-green-400' :
                    index === 2 ? 'bg-purple-500 bg-opacity-20 border border-purple-400' :
                    'bg-yellow-500 bg-opacity-20 border border-yellow-400'
                  }`}>
                    <span className={`text-lg ${
                      index === 0 ? 'text-blue-400' :
                      index === 1 ? 'text-green-400' :
                      index === 2 ? 'text-purple-400' :
                      'text-yellow-400'
                    }`}>
                      {index === 0 ? 'üë•' : index === 1 ? 'üë®‚Äçüè´' : index === 2 ? 'üìö' : 'üí∞'}
                    </span>
                  </div>
                  <div className="text-right">
                    <p className="text-xs text-gray-400 uppercase tracking-wide">{stat.label}</p>
                    <p className="text-2xl font-bold text-white mt-1">{stat.value}</p>
                  </div>
                </div>
                <div className="mt-4">
                  <div className={`h-2 rounded-full ${
                    index === 0 ? 'bg-blue-500' :
                    index === 1 ? 'bg-green-500' :
                    index === 2 ? 'bg-purple-500' :
                    'bg-yellow-500'
                  }`} style={{width: `${60 + index * 10}%`}}></div>
                </div>
              </div>
            ))}
          </div>

          <div className="bg-gray-800 rounded-xl border border-gray-700 shadow-lg p-6">
            <div className="flex items-center justify-between mb-6">
              <h3 className="text-xl font-semibold text-white">Ho·∫°t ƒë·ªông g·∫ßn ƒë√¢y</h3>
              <div className="flex items-center space-x-2">
                <div className="w-2 h-2 bg-yellow-400 rounded-full animate-pulse"></div>
                <span className="text-sm text-yellow-400">Tr·ª±c ti·∫øp</span>
              </div>
            </div>
            <div className="space-y-4">
              <div className="flex items-center p-4 bg-gray-900 bg-opacity-50 rounded-lg border border-gray-700 hover:border-yellow-400 transition-colors">
                <div className="w-10 h-10 bg-gradient-to-br from-green-400 to-green-500 rounded-full flex items-center justify-center">
                  <span className="text-black text-sm">‚úì</span>
                </div>
                <div className="ml-4 flex-1">
                  <p className="text-sm font-medium text-white">
                    ƒêƒÉng k√Ω h·ªçc sinh m·ªõi ho√†n th√†nh
                  </p>
                  <p className="text-xs text-gray-400 mt-1">X√°c nh·∫≠n th√†nh c√¥ng ‚Ä¢ 2 gi·ªù tr∆∞·ªõc</p>
                </div>
                <div className="text-xs text-green-400 font-mono bg-green-400 bg-opacity-10 px-2 py-1 rounded">
                  TH√ÄNH C√îNG
                </div>
              </div>
              <div className="flex items-center p-4 bg-gray-900 bg-opacity-50 rounded-lg border border-gray-700 hover:border-yellow-400 transition-colors">
                <div className="w-10 h-10 bg-gradient-to-br from-blue-400 to-blue-500 rounded-full flex items-center justify-center">
                  <span className="text-white text-sm">üí∞</span>
                </div>
                <div className="ml-4 flex-1">
                  <p className="text-sm font-medium text-white">
                    X·ª≠ l√Ω thanh to√°n h·ªçc ph√≠
                  </p>
                  <p className="text-xs text-gray-400 mt-1">Giao d·ªãch ƒëang x·ª≠ l√Ω ‚Ä¢ 4 gi·ªù tr∆∞·ªõc</p>
                </div>
                <div className="text-xs text-blue-400 font-mono bg-blue-400 bg-opacity-10 px-2 py-1 rounded">
                  CH·ªú X·ª¨ L√ù
                </div>
              </div>
              <div className="flex items-center p-4 bg-gray-900 bg-opacity-50 rounded-lg border border-gray-700 hover:border-yellow-400 transition-colors">
                <div className="w-10 h-10 bg-gradient-to-br from-purple-400 to-purple-500 rounded-full flex items-center justify-center">
                  <span className="text-white text-sm">üìä</span>
                </div>
                <div className="ml-4 flex-1">
                  <p className="text-sm font-medium text-white">
                    T·∫°o b√°o c√°o tu·∫ßn
                  </p>
                  <p className="text-xs text-gray-400 mt-1">T√°c v·ª• t·ª± ƒë·ªông ‚Ä¢ 1 ng√†y tr∆∞·ªõc</p>
                </div>
                <div className="text-xs text-purple-400 font-mono bg-purple-400 bg-opacity-10 px-2 py-1 rounded">
                  HO√ÄN TH√ÄNH
                </div>
              </div>
            </div>
          </div>
        </main>
      </div>
    </div>
  )
}
